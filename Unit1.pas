unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.FB,
   FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait,FireDAC.DApt,
  Data.DB, FireDAC.Comp.Client,MegaMigrator,
  Vcl.StdCtrls, Sql.Query.Builder, Sql.Query.Builder.CommandTemplate, ClipBrd,Sql.Script.Builder;

type
  TForm1 = class(TForm)
    FDConnection1: TFDConnection;
    Button1: TButton;
    Memo1: TMemo;
    Button2: TButton;
    Button3: TButton;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
  private
    MegaMigrator : TMegaMigration;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);

begin
  FDConnection1.Open();
  MegaMigrator := TMegaMigration.Create(self, FDConnection1);
  Memo1.Lines.Text :=  MegaMigrator.GenerateScript;
  ShowMessage('Concluido');
end;

procedure TForm1.Button2Click(Sender: TObject);
var
  builder : TQueryBuilder;

  var
  Cmd: ICommandTemplate;
  IsPk : boolean;
  aCampos : TStringList;
  cps : string;
begin
// IsPk := true;
//
//   Cmd := TCommandTemplate.Create('CREATE TABLE :NAME ( '+slineBreak+
//'    ID      INTEGER NOT NULL {PRIMARY KEY} {BORA BORA BORA},    '+slineBreak+
//'    NOME    VARCHAR(10),                        '+slineBreak+
//'    EITA    BLOB SUB_TYPE TEXT SEGMENT SIZE 80,  '+slineBreak+
//'    NUMERO  NUMERIC(15,2)   '+slineBreak+
//');')
//    .AddPar('PRIMARY KEY',IsPk)
//    .AddPar('BORA BORA BORA',false)
//   	.AddPar('NAME', 'CADASTROS');
//
//    Clipboard.AsText := Cmd.AsString;
//
//   Memo1.Lines.Text := Cmd.AsString;

 aCampos := TStringList.Create;
 aCampos.Add('CAMPO1 VARCHAR(2)');
 aCampos.Add('CAMPO2 VARCHAR(2)');
 aCampos.Add('CAMPO3 VARCHAR(2)');

// cps := StringReplace(aCampos.Text.Trim, sLineBreak, ',' + sLineBreak, [rfReplaceAll]);

 // Memo1.Lines.Text := cps;

 // exit;

  builder := TQueryBuilder.Create;
  Memo1.Lines.Text :=  builder.Start('ini')
     .Append('CREATE OR ALTER TABLE :NAME')
     .AppendLine('(')
       .IncIndent()
         .AppendLine(aCampos,','+sLineBreak)
        { .AddLine('CAMPO VARCHAR(2);')
         .AddLine('CAMPO2 VARCHAR(2);')
         .AddLine('CAMPO2 VARCHAR(2);')}
       .DecIndent()
     .AppendLine(')')
  .AsString;

end;

procedure TForm1.Button3Click(Sender: TObject);
var
 script : TScriptBuilder;
begin
  script := TScriptBuilder.Create;
  script.Append(
  '/******************************************************************************/'+slineBreak+
  '/****              Generated by IBExpert 07/05/2025 22:54:05               ****/'+slineBreak+
  '/******************************************************************************/'+slineBreak+
  '                                                                                '+slineBreak+
  '/******************************************************************************/'+slineBreak+
  '/****     Following SET SQL DIALECT is just for the Database Comparer      ****/'+slineBreak+
  '/******************************************************************************/');


//  script.NewSQL.AppendLine('CREATE TABLE NOME (')
//                  .IncIndent
//                  .AppendLine('teste')
//                  .DecIndent
//                  .AppendLine(');')






  script.AppendLine('--End Script');

  Memo1.Lines.Text := script.AsString;
end;

end.
