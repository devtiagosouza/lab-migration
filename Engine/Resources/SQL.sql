/******************************************************************************/
/****              Generated by IBExpert 13/05/2025 23:32:45               ****/
/******************************************************************************/

/******************************************************************************/
/****     Following SET SQL DIALECT is just for the Database Comparer      ****/
/******************************************************************************/
SET SQL DIALECT 3;



/******************************************************************************/
/****                                Tables                                ****/
/******************************************************************************/


CREATE GENERATOR GEN_CAIXA_ID;

CREATE TABLE CAIXA (
    ID_CAIXA         NUMERIC(10,0),
    DATA             DATE,
    VALOR            NUMERIC(10,2),
    ID_HISTORICO     INTEGER,
    HISTORICO        VARCHAR(60),
    ID_CONTA         INTEGER,
    CONTA            VARCHAR(20),
    NAT              CHAR(1),
    VENCIMENTO       DATE,
    CLIENTE          VARCHAR(40),
    BANCO            VARCHAR(20),
    PRACA            VARCHAR(20),
    ID_FATURA        NUMERIC(10,0),
    ID_LOJA          INTEGER,
    CHEQUE           VARCHAR(15),
    BAIXADO          INTEGER DEFAULT 1,
    REGISTRO         VARCHAR(100),
    ID_VENDEDOR      SMALLINT,
    ID_CLIENTE       BIGINT,
    TITULO           VARCHAR(10),
    FAVORECIDO       VARCHAR(35),
    CORRENTISTA      VARCHAR(35),
    DESCRICAO        VARCHAR(70),
    DATA_BAIXA       DATE,
    BX               CHAR(1),
    NATUREZA         CHAR(1),
    OPERADOR         INTEGER,
    DOC_NF           VARCHAR(5),
    NUMERO_ECF       VARCHAR(6),
    SERIE_ECF        VARCHAR(25),
    ENVIADO          VARCHAR(1) DEFAULT 'S',
    CRITERIORECIBO   VARCHAR(80),
    COO              VARCHAR(10),
    GNF              VARCHAR(10),
    GRG              VARCHAR(10),
    ID_CONTA_BANCO   INTEGER,
    DATA_HORA_TURNO  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ID_TURNO         INTEGER,
    ID_CUPOM         BIGINT,
    ID_PLANO         INTEGER,
    ID_NFCE          BIGINT,
    NUMERO_NFCE      BIGINT,
    SERIE_NFCE       BIGINT,
    HASH_TERMINAL    VARCHAR(30),
    NUMERO_CAIXA     INTEGER,
    NUMERO_TURNO     INTEGER
);



/******************************************************************************/
/****                             Primary keys                             ****/
/******************************************************************************/

ALTER TABLE CAIXA ADD PRIMARY KEY (ID_CAIXA);


/******************************************************************************/
/****                               Indices                                ****/
/******************************************************************************/

CREATE INDEX CAIXA_CX ON CAIXA (DATA, ID_HISTORICO, ID_CONTA, VALOR, VENCIMENTO, ID_LOJA, ID_VENDEDOR, ID_CLIENTE, NAT, REGISTRO, DATA_HORA_TURNO);
CREATE INDEX CAIXA_CX_ID_CONTA_BANCO ON CAIXA (ID_CONTA_BANCO);
CREATE INDEX CAIXA_IDX1 ON CAIXA (DATA);
CREATE INDEX CAIXA_IDX2 ON CAIXA (DATA, NAT);
CREATE INDEX CAIXA_IDX3 ON CAIXA (NAT, CONTA);
CREATE INDEX CAIXA_IDX4 ON CAIXA (ID_HISTORICO);
CREATE INDEX CAIXA_IDX5 ON CAIXA (ID_LOJA);
CREATE INDEX CAIXA_IDX6 ON CAIXA (DATA, ID_LOJA, ID_HISTORICO);
CREATE INDEX CAIXA_IDX7 ON CAIXA (VENCIMENTO);
CREATE INDEX CAIXA_IDX8 ON CAIXA (DATA_BAIXA);
CREATE INDEX CAIXA_IDX_ID_CONTA ON CAIXA (ID_CONTA);
CREATE INDEX CAIXA_IDX_ID_NFCE ON CAIXA (ID_NFCE);
CREATE INDEX CAIXA_IDX_REGISTRO ON CAIXA (REGISTRO);
CREATE INDEX INX_NAODUPLICA ON CAIXA (ID_CONTA, DATA, ID_LOJA, ID_HISTORICO, ID_CLIENTE, TITULO, VALOR, VENCIMENTO, REGISTRO, DATA_HORA_TURNO);


/******************************************************************************/
/****                               Triggers                               ****/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/****                         Triggers for tables                          ****/
/******************************************************************************/



/* Trigger: CAIXA_BI */
CREATE OR ALTER TRIGGER CAIXA_BI FOR CAIXA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID_CAIXA IS NULL) THEN
    NEW.ID_CAIXA = GEN_ID(GEN_CAIXA_ID,1);
END
^

/* Trigger: TRG_MOVIMENTACAO_CAIXA */
CREATE OR ALTER TRIGGER TRG_MOVIMENTACAO_CAIXA FOR CAIXA
ACTIVE AFTER INSERT OR UPDATE OR DELETE POSITION 0
AS  begin   if (deleting) then      EXECUTE PROCEDURE SP_MPA_MOVIMENTACAO_CAIXA(old.data,old.data);   else if (updating) then begin         if ((new.data <> old.data) or (new.id_conta <> old.id_conta) or (new.id_turno <> old.id_turno) or (new.valor <> old.valor))    then           EXECUTE PROCEDURE SP_MPA_MOVIMENTACAO_CAIXA(new.data,new.data);         if (new.data <> old.data) then              EXECUTE PROCEDURE SP_MPA_MOVIMENTACAO_CAIXA(old.data,old.data);   end   else EXECUTE PROCEDURE SP_MPA_MOVIMENTACAO_CAIXA(new.data,new.data);  end
^
SET TERM ; ^



/******************************************************************************/
/****                              Privileges                              ****/
/******************************************************************************/

